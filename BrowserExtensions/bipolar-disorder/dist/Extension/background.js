const d=()=>{const n=new Set;async function e(){(await chrome.tabs.query({})).forEach(async t=>{if(t.audible&&!n.has(t.id)){n.add(t.id);const s=await chrome.runtime.getContexts({});let o=!1;const c=s.find(a=>a.contextType==="OFFSCREEN_DOCUMENT");if(c?o=c.documentUrl.endsWith("#recording"):await chrome.offscreen.createDocument({url:"offscreen.html",reasons:["USER_MEDIA"],justification:"Recording from chrome.tabCapture API"}),o){chrome.runtime.sendMessage({type:"stop-recording",target:"offscreen"});return}try{const a=await chrome.tabCapture.getMediaStreamId({targetTabId:t.id});chrome.runtime.sendMessage({type:"start-recording",target:"offscreen",data:a})}catch(a){console.log("Error capturing tab:",a),chrome.runtime.sendMessage({type:"user-gesture",target:"offscreen"})}}else!t.audible&&n.has(t.id)&&await i(t.id)===!1&&(n.delete(t.id),chrome.runtime.sendMessage({type:"stop-recording",target:"offscreen"}))})}async function i(r){return(await chrome.tabs.get(r)).audible}setInterval(e,1e3),chrome.tabs.onUpdated.addListener(async(r,t,s)=>{t.url&&(s.url.startsWith("http")&&console.log("Testing Perpeses Only"),s.url.startsWith("https://www.google.lk/search?")&&(console.log("ok"),chrome.webNavigation.onCompleted.addListener(function(){chrome.tabs.sendMessage(r,{action:"getSearchResults"},o=>{if(o&&o.term){const c=o.term||"No search term provided";h(c)}else console.warn("No response from content script.")})},{url:[{schemes:["http","https"]}]})),s.url.startsWith("https://www.google.")||chrome.webNavigation.onCompleted.addListener(function(){chrome.tabs.sendMessage(r,{action:"getPageContent"},o=>{o&&o.content?f(o.content):console.warn("No response from content script.")})},{url:[{schemes:["http","https"]}]}))})};function h(n){fetch("http://127.0.0.1:5000/api/data",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({Term:"SearchQuary",searchTerm:n})}).then(e=>e.json()).then(e=>console.log("Response from Python API:",e)).catch(e=>console.error("Error:",e))}function f(n){fetch("http://127.0.0.1:5000/api/data",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({Term:"VisitPageContents",contentdata:n})}).then(e=>e.json()).then(e=>console.log("Response from Python API:",e)).catch(e=>console.error("Error:",e))}d();
